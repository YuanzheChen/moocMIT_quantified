"""
This script holds dictionaries of all the potential features that can be extracted
Each feature in turn contains a dictionary of its salient features:
feature_id:
    name: descriptive name of feature,
    filename: filename containing feature scripts without extension,
    extension: either .sql or .py,
    default: default value of feature,
    dependencies: later features that depend on this extraction being run first,
    desc: description of what this feature is looking at
"""


USER_FEATURE_CATALOG = {
    1: {'name': "dropout",
        'filename': '1_dropout',
        'extension': '.sql',
          'table': 'user_long_feature',
        'default': 0,
        'dependencies': [],
        'desc': "Whether or not the student has dropped out by this week (this is the label used in prediction)"},
    2: {'name': "sum_observed_events_duration",
        'filename': '2_sum_observed_events_duration',
        'extension': '.sql',
          'table': 'user_long_feature',
        'default': 0,
        'dependencies': [10],
        'desc': "Total time spent on each resource during the week. "},
    3: {'name': "number_of_forum_posts",
        'filename': '3_number_of_forum_posts',
        'extension': '.sql',
          'table': 'user_long_feature',
        'default': 0,
        'dependencies': [103],
        'desc': "Number of forum posts during the week"},
    4: {'name': "number_of_wiki_edits",
        'filename': '4_number_of_wiki_edits',
        'extension': '.sql',
          'table': 'user_long_feature',
        'default': 0,
        'dependencies': [104],
        'desc': "Number of wiki edits during the week. "},
    5: {'name': "average_length_of_forum_posts",
        'filename': '5_average_length_of_forum_posts',
        'extension': '.sql',
          'table': 'user_long_feature',
        'default': 0,
        'dependencies': [105],
        'desc': "Average length of forum posts during the week"},
    6: {'name': "distinct_attempts",
        'filename': '6_distinct_attempts',
        'extension': '.sql',
          'table': 'user_long_feature',
        'default': 0,
        'dependencies': [11, 111],
        'desc': "Number of distinct problems attempted during the week. "},
    7: {'name': "number_of_attempts",
        'filename': '7_number_of_attempts',
        'extension': '.sql',
          'table': 'user_long_feature',
        'default': 0,
        'dependencies': [209],
        'desc': "Number of potentially non-distinct problem attempts during the week"},
    8: {'name': "distinct_problems_correct",
        'filename': '8_distinct_problems_correct',
        'extension': '.sql',
          'table': 'user_long_feature',
        'default': 0,
        'dependencies': [10, 11, 110, 111],
        'desc': "Number of distinct problems correct during the week. "},
    9: {'name': "average_number_of_attempts",
        'filename': '9_average_number_of_attempts',
        'extension': '.sql',
          'table': 'user_long_feature',
        'default': 0,
        'dependencies': [109, 202, 203],
        'desc': "Average number of problem attempts during the week. "},
    10: {'name': "sum_observed_events_duration_per_correct_problem",
         'filename': '10_sum_observed_events_duration_per_correct_problem',
         'extension': '.sql',
          'table': 'user_long_feature',
         'default': -1,
         'dependencies': [110],
         'desc': "Total time spent on all resources during the week (feat. 2) divided by number of correct problems (feat. 8)"},
    11: {'name': "number_problem_attempted_per_correct_problem",
         'filename': '11_number_problem_attempted_per_correct_problem',
         'extension': '.sql',
          'table': 'user_long_feature',
         'default': -1,
         'dependencies': [111],
         'desc': "Number of problems attempted (feat. 6) divided by number of correct problems (feat. 8)"},
    12: {'name': "average_time_to_solve_problem",
         'filename': '12_average_time_to_solve_problem',
         'extension': '.sql',
          'table': 'user_long_feature',
         'default': -1,
         'dependencies': [112],
         'desc': "Average of (max(attempt.timestamp) - min(attempt.timestamp)) for each problem during the week"},
    13: {'name': "observed_event_timestamp_variance",
         'filename': '13_observed_event_timestamp_variance',
         'extension': '.py',
         'table': 'user_long_feature',
         'default': 0,
         'dependencies': [],
         'desc': "Variance of a students observed event timestamps in one week. "},
    14: {'name': "number_of_collaborations",
         'filename': '14_number_of_collaborations',
         'extension': '.sql',
          'table': 'user_long_feature',
         'default': 0,
         'dependencies': [],
         'desc': "Number of collaborations during the week"},
    15: {'name': "max_duration_resources",
         'filename': '15_max_duration_resources',
         'extension': '.sql',
          'table': 'user_long_feature',
         'default': 0,
         'dependencies': [],
         'desc': "Duration of longest observed event"},
    16: {'name': "sum_observed_events_lecture",
         'filename': '16_sum_observed_events_lecture',
         'extension': '.sql',
          'table': 'user_long_feature',
         'default': 0,
         'dependencies': [],
         'desc': "Total time spent on all lecture-related resources during the week"},
    17: {'name': "sum_observed_events_book",
         'filename': '17_sum_observed_events_book',
         'extension': '.sql',
          'table': 'user_long_feature',
         'default': 0,
         'dependencies': [],
         'desc': "Total time spent on all book-related resources during the week"},
    18: {'name': "sum_observed_events_wiki",
         'filename': '18_sum_observed_events_wiki',
         'extension': '.sql',
          'table': 'user_long_feature',
         'default': 0,
         'dependencies': [],
         'desc': "Total time spent on all wiki-related resources during the week"},
    103: {'name': "difference_feature_3",
          'filename': '103_difference_feature_3',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': 0,
          'dependencies': [],
          'desc': "Number of forum posts in current week divided by number of forum posts in previous week (difference of feature 3)"},
    104: {'name': "difference_feature_4",
          'filename': '104_difference_feature_4',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': 0,
          'dependencies': [],
          'desc': "Number of wiki edits in current week divided by number of wiki edits in previous week (difference of feature 4)"},
    105: {'name': "difference_feature_5",
          'filename': '105_difference_feature_5',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': 0,
          'dependencies': [],
          'desc': "Average length of forum posts in current week divided by average length of forum posts in previous week, where number of forum posts in previous week is > 5 (difference of feature 5)"},
    109: {'name': "difference_feature_9",
          'filename': '109_difference_feature_9',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': 0,
          'dependencies': [],
          'desc': "Average number of attempts in current week divided by average number of attempts in previous week (difference of feature 9)"},
    110: {'name': "difference_feature_10",
          'filename': '110_difference_feature_10',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': 0,
          'dependencies': [],
          'desc': "(Total time spent on all resources during current week (feat. 2) divided by number of correct problems during current week (feat. 8)) divided by same thing from previous week (difference of feature 10)"},
    111: {'name': "difference_feature_11",
          'filename': '111_difference_feature_11',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': 0,
          'dependencies': [],
          'desc': "(Number of problems attempted (feat. 6) divided by number of correct problems (feat. 8)) divided by same thing from previous week (difference of feature 11)"},
    112: {'name': "difference_feature_12",
          'filename': '112_difference_feature_12',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': 0,
          'dependencies': [],
          'desc': "(Average of (max(attempt.timestamp) - min(attempt.timestamp)) for each problem during current week) divided by same thing from previous week (difference of feature 12)"},
    201: {'name': "number_of_forum_responses",
          'filename': '201_number_of_forum_responses',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': 0,
          'dependencies': [],
          'desc': "Number of forum responses per week (also known as CF1)"},
    202: {'name': "percentile_of_average_number_of_attempts",
          'filename': '202_percentile_of_average_number_of_attempts',
          'extension': '.py',
          'table': 'user_long_feature',
          'default': 0,
          'dependencies': [],
          'desc': "Each students average number of attempts during the week (feat. 9) compared with other students as a percentile"},
    203: {'name': "percent_of_average_number_of_attempts",
          'filename': '203_percent_of_average_number_of_attempts',
          'extension': '.py',
          'table': 'user_long_feature',
          'default': 0,
          'dependencies': [],
          'desc': "Each students average number of attempts during the week (feat. 9) compared with other students as a percent of max"},
    204: {'name': "pset_grade",
          'filename': '204_pset_grade',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': 0,
          'dependencies': [205],
          'desc': "Number of homework problems correct in a week divided by number of homework problems in the week"},
    205: {'name': "pset_grade_over_time",
          'filename': '205_pset_grade_over_time',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': -1,
          'dependencies': [],
          'desc': "Pset grade from current week (feature 204) - avg(pset grade from previous week)"},
    206: {'name': "lab_grade",
          'filename': '206_lab_grade',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': 0,
          'dependencies': [207],
          'desc': "Number of lab problems correct in a week divided by number of lab problems in the week"},
    207: {'name': "lab_grade_over_time",
          'filename': '207_lab_grade_over_time',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': 0,
          'dependencies': [],
          'desc': "Lab grade from current week (feature 206) - avg(lab grade from previous week)"},
    208: {'name': "attempts_correct",
          'filename': '208_attempts_correct',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': -1,
          'dependencies': [209],
          'desc': "Number of attempts (any type) that were correct during the week"},
    209: {'name': "percent_correct_submissions",
          'filename': '209_percent_correct_submissions',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': 0,
          'dependencies': [],
          'desc': "Percentage of total submissions that were correct (feature 208 / feature 7)"},
    210: {'name': "average_predeadline_submission_time",
          'filename': '210_average_predeadline_submission_time',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': -1,
          'dependencies': [],
          'desc': "Average time between problem submissions and problem due date (in seconds)"},
    301: {'name': "std_hours_working",
          'filename': '301_std_hours_working',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': 0,
          'dependencies': [],
          'desc': "Standard deviation of the hours the user produces events and collaborations. Tries to capture how regular a student is with her schedule while doing a MOOC"},
    302: {'name': "time_to_react",
          'filename': '302_time_to_react',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': 0,
          'dependencies': [],
          'desc': "Average time in days a student takes to react when a new resource in posted. Tried to capture how fast a student is reacting to new content"},
    701: {'name': "total_engagement_time",
          'filename': '701_total_engagement_time',
          'extension': '.sql',
          'table': 'user_video_feature',
          'default': 0,
          'dependencies': [],
          'desc': "The total effective watching time of a user on a video"},
    702: {'name': "session_engagement_time",
          'filename': '702_session_engagement_time',
          'extension': '.sql',
          'table': 'user_video_feature',
          'default': 0,
          'dependencies': [],
          'desc': "The effective watching time of a user on a video during one watching session"},
    703: {'name': "scroll_back_times",
          'filename': '703_scroll_back_times',
          'extension': '.sql',
          'table': 'user_video_feature',
          'default': 0,
          'dependencies': [],
          'desc': "The number of times that a user scroll back when watching a video"},
    704: {'name': "frequency_per_video",
          'filename': '704_frequency_per_video',
          'extension': '.sql',
          'table': 'video_feature',
          'default': 0,
          'dependencies': [],
          'desc': "The number of times that a certain video being watched"},
    705: {'name': "frequency_per_user",
          'filename': '705_frequency_per_user',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': 0,
          'dependencies': [],
          'desc': "The number of videos that a certain user watched"},
    706: {'name': "rewatching_rate_per_video",
          'filename': '706_rewatching_rate_per_video',
          'extension': '.sql',
          'table': 'video_feature',
          'default': 0,
          'dependencies': [704],
          'desc': "The percentage of users who watch a certain video more than once"},
    707: {'name': "rewatching_rate_per_user",
          'filename': '707_rewatching_rate_per_user',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': 0,
          'dependencies': [704, 705],
          'desc': "The percentage of videos that being watched more than once by a certain user"},
    710: {'name': "total_engagement_time_per_user",
          'filename': '710_total_engagement_time_per_user',
          'extension': '.sql',
          'table': 'video_feature',
          'default': 0,
          'dependencies': [701],
          'desc': "The total engagement time of each user"},
    711: {'name': "total_engagement_time_per_video",
          'filename': '711_total_engagement_time_per_video',
          'extension': '.sql',
          'table': 'video_feature',
          'default': 0,
          'dependencies': [701],
          'desc': "The total engagement time of each video"},
    712: {'name': "session_engagement_time_per_user",
          'filename': '712_session_engagement_time_per_user',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': 0,
          'dependencies': [702],
          'desc': "The session engagement time of each user"},
    713: {'name': "session_engagement_time_per_video",
          'filename': '713_session_engagement_time_per_video',
          'extension': '.sql',
          'table': 'video_feature',
          'default': 0,
          'dependencies': [702],
          'desc': "The session engagement time of each video"},
    714: {'name': "scroll_back_times_per_user",
          'filename': '714_scroll_back_times_per_user',
          'extension': '.sql',
          'table': 'user_long_feature',
          'default': 0,
          'dependencies': [703],
          'desc': "The total number of times that a user scroll back"},
    715: {'name': "scroll_back_times_per_video",
          'filename': '715_scroll_back_times_per_video',
          'extension': '.sql',
          'table': 'video_feature',
          'default': 0,
          'dependencies': [703],
          'desc': "The total number of scrolling back in a video"},
}


# Cannot implement these two features right now since no information about video length
# TODO: Implement these two features by extra data on video length
'''
708: {'name': "completion_rate_per_video",
      'filename': '708_completion_rate_per_video',
      'extension': '.sql',
          'table': 'user_long_feature',
      'default': 0,
      'dependencies': [704],
      'desc': "The percentage of users who watch a certain video (almost) completely"},
709: {'name': "completion_rate_per_user",
      'filename': '709_completion_rate_per_user',
      'extension': '.sql',
          'table': 'user_long_feature',
      'default': 0,
      'dependencies': [704, 705],
      'desc': "The percentage of videos that being (almost) completed watched by a certain user"},
'''


def get_feature_ids():
    return list(USER_FEATURE_CATALOG.keys())


def get_feature_dict(feature_id):
    return USER_FEATURE_CATALOG[feature_id] if feature_id in USER_FEATURE_CATALOG else None


def process_exec(exec_list):
    exec_list = [fid for fid in exec_list if fid in USER_FEATURE_CATALOG.keys()]
    if not exec_list:
        return []
    return sorted(exec_list)


def process_skip(skip_list):
    exec_list = skip2exec(skip_list)
    return process_exec(exec_list)


def get_dependencies(feature_list):
    dependencies = []
    for fid in feature_list:
        dependencies += USER_FEATURE_CATALOG[fid]['dependencies']
    return list(set(dependencies))


def skip2exec(skip_list):
    dependencies = get_dependencies([fid for fid in USER_FEATURE_CATALOG.keys() if fid not in skip_list])
    missed_dependencies = [fid for fid in dependencies if fid in skip_list]
    if missed_dependencies:
        print("Warning: the following dependencies of queued features are skipped:\n")
        print("%s\n", str([USER_FEATURE_CATALOG[fid]['name'] for fid in missed_dependencies]))
    return [fid for fid in USER_FEATURE_CATALOG.keys() if fid not in skip_list]
